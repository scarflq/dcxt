<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dcxt.dao.ProductMapper">
  <resultMap id="BaseResultMap" type="dcxt.pojo.Product">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="price" jdbcType="REAL" property="price" />
    <result column="img" jdbcType="VARCHAR" property="img" />
    <result column="category" jdbcType="INTEGER" property="category" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="good" jdbcType="INTEGER" property="good" />
  </resultMap>
  <resultMap id="WithSortResultMap" type="dcxt.pojo.Product">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="price" jdbcType="REAL" property="price" />
    <result column="img" jdbcType="VARCHAR" property="img" />
    <result column="category" jdbcType="TINYINT" property="category" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="good" jdbcType="INTEGER" property="good" />
    <association property="ca" javaType="dcxt.pojo.Category">
      <id column="category" jdbcType="INTEGER" property="cId"/>
      <result column="c_title" jdbcType="VARCHAR" property="cTitle"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, description, price, img, category, create_time, status, good
  </sql>
  <sql id="WithSort_Column_List">
    m.id, m.title, m.price, m.description, m.img, m.category, m.create_time, m.status, m.good,ca.c_title
  </sql>
  <select id="selectByExample" parameterType="java.lang.String" resultMap="WithSortResultMap">
    select
    <include refid="WithSort_Column_List" />
    from product m
    left join category ca on m.category=ca.c_id
    where title like "%"#{title}"%" order by id
  </select>
  <select id="selectByExamplef" parameterType="java.lang.String" resultMap="WithSortResultMap">
    select
    <include refid="WithSort_Column_List" />
    from product m
    left join category ca on m.category=ca.c_id
    where m.status=0 and title like "%"#{title}"%" order by id
  </select>
  <select id="selectByExampleWithSort" parameterType="dcxt.pojo.ProductExample" resultMap="WithSortResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithSort_Column_List" />
    from product m
    left join category ca on m.category=ca.c_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    ORDER BY m.id
  </select>
  <select id="selectByExampleWithSortf" parameterType="dcxt.pojo.ProductExample" resultMap="WithSortResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithSort_Column_List" />
    from product m
    left join category ca on m.category=ca.c_id WHERE m.status=0
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    ORDER BY m.id
  </select>
  <select id="selectByCategory" parameterType="java.lang.Integer" resultMap="WithSortResultMap">
    select * from product m left join category ca on m.category=ca.c_id where category = #{category,jdbcType=INTEGER}     ORDER BY m.id
  </select>
  <select id="selectByCategoryf" parameterType="java.lang.Integer" resultMap="WithSortResultMap">
    select * from product m left join category ca on m.category=ca.c_id where m.status = 0 AND category = #{category,jdbcType=INTEGER}     ORDER BY m.id
  </select>
  <select id="selectByNAC" parameterType="dcxt.pojo.Product" resultMap="WithSortResultMap">
    select * from product m left join category ca on m.category=ca.c_id where category = #{category,jdbcType=INTEGER} AND title like "%"#{title}"%" order by id
  </select>
  <select id="selectByNACf" parameterType="dcxt.pojo.Product" resultMap="WithSortResultMap">
    select * from product m left join category ca on m.category=ca.c_id where category = #{category,jdbcType=INTEGER} AND title like "%"#{title}"%" AND m.status = 0 order by id
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="dcxt.pojo.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="dcxt.pojo.Product">
    insert into product (id, title, description, 
      price, img, category, 
      create_time, status, good
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{price,jdbcType=REAL}, #{img,jdbcType=VARCHAR}, #{category,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{good,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="dcxt.pojo.Product">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="good != null">
        good,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="good != null">
        #{good,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="dcxt.pojo.ProductExample" resultType="java.lang.Long">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.img != null">
        img = #{record.img,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.good != null">
        good = #{record.good,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=REAL},
      img = #{record.img,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      good = #{record.good,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="dcxt.pojo.Product">
    update product
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="good != null">
        good = #{good,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="dcxt.pojo.Product">
    update product
    set title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      img = #{img,jdbcType=VARCHAR},
      category = #{category,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      good = #{good,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>